# environment.yml
# Configuration file for creating a Conda Environment with dependencies needed for Tethys Platform.
# Create the environment by running the following command (after installing Miniconda):
#   $ conda env create -f environment.yml

name: tethys

channels:
- tethysplatform
- tethysplatform/label/dev
- conda-forge
- defaults

dependencies:
- python

# system dependencies
- pycrypto
- pyopenssl
- docker-py
- distro

# database dependencies
- postgresql
- psycopg2
- sqlalchemy
- geoalchemy2

# plotting dependencies
- plotly
- bokeh

# external services dependencies
- tethys_dataset_services>=2.0.0  # This needs upgrading
- hs_restclient
- owslib
- requests
- social-auth-app-django
- dask=1.2.*  # Needs to be unpinned to support newer Python versions (>3.7)
- tethys_dask_scheduler>=1.0.2  # This needs upgrading
- daphne=2.5.*  # TODO: Which version?
- service_identity
- condorpy
- siphon
- python-jose
- pyjwt<2.0.0

# datetime dependencies
- arrow
- isodate

# django/plugin dependencies
- django=3.2.*
- channels=3.*  # TODO: Need to upgrade from 2 to 3  # NOTE: There is an issue with the channels version 3.0.4 installed from conda. Must install from pip for now.
- django-axes
- django-filter
- djangorestframework
- django-bootstrap5
- django-model-utils
- django-guardian
- django-gravatar2
- django-termsandconditions
- django-session-security
- django-analytical
- django-simple-captcha
- django-recaptcha2
- django-mfa2
- social-auth-app-django

# tests dependencies
- requests-mock
- selenium
- coverage
- factory_boy

# for now
- pillow
- pip
- future
- flake8
- pbr
- git

# Conda to allow Python API access to Conda Install
- conda
