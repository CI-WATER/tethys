[unix_http_server]
file=/run/asgi/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/var/log/asgi/asgid.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

[supervisorctl]
serverurl=unix:///run/asgi/supervisor.sock ; use a unix:// URL  for a unix socket

[fcgi-program:asgi]
# TCP socket used by Nginx backend upstream
socket=tcp://{{ hostname }}:{{ port }}

# Project files directory location
directory={{ tethys_src }}

# Each process needs to have a separate socket file, so we use process_num
command={{ conda_home }}/envs/{{ conda_env_name }}/bin/daphne -u /run/asgi/tethys%(process_num)d.sock --fd 0 --access-log - --proxy-headers tethys_portal.asgi:application

# Number of processes to startup, roughly the number of CPUs you have
numprocs={{ asgi_processes }}

# Give each process a unique name so they can be told apart
process_name=tethys_asgi%(process_num)d

# Automatically start and recover processes
autostart=true
autorestart=true

# Choose where you want your log to go
stdout_logfile=/var/log/asgi/tethys.log
redirect_stderr=true