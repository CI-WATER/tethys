# Generated by Django 3.2.16 on 2023-02-06 17:52

from django.db import migrations, models
import django.db.models.deletion



def customtempsetting_to_customsimplesetting(apps, schema_editor):
    breakpoint()
    """ From non inehirtance to post inheritance """
    CustomTempSetting = apps.get_model('tethys_apps', 'CustomSettingTemp')
    CustomSimpleSetting = apps.get_model('tethys_apps', 'customsimplesetting')
    for cs in CustomTempSetting.objects.all():
        cs_simple = CustomSimpleSetting.objects.create(tethysappsetting_ptr=cs.tethysappsetting_ptr, value=cs.value, default=cs.default, type=cs.type )
        # cs.delete()

def customsimplesetting_to_customtempsetting(apps, schema_editor):
    """ Rollback """
    breakpoint()

    CustomSimpleSetting = apps.get_model('tethys_apps', 'customsimplesetting')
    CustomTempSetting = apps.get_model('tethys_apps', 'CustomSettingTemp')
    for cs in CustomSimpleSetting.objects.all():
        cs_simple = CustomTempSetting.objects.create(tethysappsetting_ptr=cs.tethysappsetting_ptr,value=cs.value, default=cs.default, type=cs.type )
        cs.delete()

def customsetting_to_customtempsetting(apps, schema_editor):
    """ From non inehirtance to post inheritance """
    breakpoint()

    CustomTempSetting = apps.get_model('tethys_apps', 'CustomSettingTemp')
    CustomSetting = apps.get_model('tethys_apps', 'customsetting')
    for cs in CustomSetting.objects.all():
        cs_simple = CustomTempSetting.objects.create(tethysappsetting_ptr=cs.tethysappsetting_ptr, value=cs.value, default=cs.default, type=cs.type )
        # cs.delete()

def customtempsetting_to_customsetting(apps, schema_editor):
    """ Rollback """
    breakpoint()

    CustomSetting = apps.get_model('tethys_apps', 'customsetting')
    CustomTempSetting = apps.get_model('tethys_apps', 'CustomSettingTemp')



    for cs in CustomTempSetting.objects.all():
        cs_simple = CustomSetting.objects.create(tethysappsetting_ptr=cs.tethysappsetting_ptr,value=cs.value, default=cs.default, type=cs.type )
        cs.delete()



        
class Migration(migrations.Migration):

    dependencies = [
        ('tethys_apps', '0003_alter_tethysapp_feedback_emails'),
    ]

    operations = [

        migrations.AddField(
            model_name='customsetting',
            name='type_custom_setting',
            field=models.CharField(blank=True, default='', max_length=1024),
        ),
        migrations.RenameField(
            model_name='customsetting',
            old_name='value',
            new_name='value_temp'
        ),
        migrations.RenameField(
            model_name='customsetting',
            old_name='type',
            new_name='type_temp'
        ),
        migrations.RenameField(
            model_name='customsetting',
            old_name='default',
            new_name='default_temp'
        ),

        migrations.CreateModel(
            name='CustomSimpleSetting',
            fields=[
                ('customsetting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tethys_apps.customsetting')),
                ('value', models.CharField(blank=True, default='', max_length=1024)),
                ('default', models.CharField(blank=True, default='', max_length=1024)),
                ('type', models.CharField(choices=[('STRING', 'String'), ('INTEGER', 'Integer'), ('FLOAT', 'Float'), ('BOOLEAN', 'Boolean'), ('UUID', 'UUID'), ('JSON', 'Json'), ('SECRET', 'Secret')], default='STRING', max_length=200)),
            ],
            bases=('tethys_apps.customsetting',),
        ),
        migrations.CreateModel(
            name='CustomJSONSetting',
            fields=[
                ('customsetting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tethys_apps.customsetting')),
                ('value', models.JSONField(blank=True, default=dict)),
                ('default', models.JSONField(blank=True, default=dict)),
            ],
            bases=('tethys_apps.customsetting',),
        ),
        migrations.CreateModel(
            name='CustomSecretSetting',
            fields=[
                ('customsetting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tethys_apps.customsetting')),
                ('value', models.CharField(blank=True, default='', max_length=1024)),
            ],
            bases=('tethys_apps.customsetting',),
        ),

    ]
