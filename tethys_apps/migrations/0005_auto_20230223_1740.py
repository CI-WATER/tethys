# Generated by Django 3.2.16 on 2023-02-23 17:40

from django.db import migrations


def forward(apps, schema_editor):
    """ From non inheritance to CustomBaseSetting inheritance """
    CustomBaseSetting = apps.get_model('tethys_apps', 'CustomSettingBase')
    CustomSetting = apps.get_model('tethys_apps', 'customsetting')
    OldCustomSetting = apps.get_model('tethys_apps', 'oldcustomsetting')

    db_alias = schema_editor.connection.alias
    # breakpoint()

    for cs in OldCustomSetting.objects.using(db_alias).all():
        cs_child = CustomSetting.objects.create(tethys_app = cs.tethys_app, name= cs.name, description = cs.description, required =cs.required , type_custom_setting='SIMPLE', value=cs.value, default=cs.default, type=cs.type)
        cs_child.save()
        cs.delete()


def backward(apps, schema_editor):
    """ From CustomBaseSetting inheritance to non inheritance """
    CustomBaseSetting = apps.get_model('tethys_apps', 'CustomSettingBase')
    CustomSetting = apps.get_model('tethys_apps', 'customsetting')
    OldCustomSetting = apps.get_model('tethys_apps', 'oldcustomsetting')
    
    db_alias = schema_editor.connection.alias

    for cs in CustomSetting.objects.using(db_alias).all():
        cs_old = OldCustomSetting.objects.create(tethys_app = cs.tethys_app, name= cs.name, description = cs.description, required =cs.required, value=cs.value, default=cs.default, type=cs.type)
        cs_old.save()
        cs.delete()
    
    for cs_parent in CustomBaseSetting.objects.using(db_alias).all():
        cs_parent.delete()
    
class Migration(migrations.Migration):

    dependencies = [
        ('tethys_apps', '0004_auto_20230223_1731'),
    ]

    operations = [
         migrations.RunPython(forward, backward)
    ]
